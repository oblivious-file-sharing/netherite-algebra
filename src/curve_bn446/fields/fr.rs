use ark_ff::{biginteger::BigInteger448 as BigInteger, fields::*};

pub type Fr = Fp448<FrParameters>;

pub struct FrParameters;

impl Fp448Parameters for FrParameters {}
impl FftParameters for FrParameters {
    type BigInt = BigInteger;

    const TWO_ADICITY: u32 = 5;

    /// two_adic_root_of_unity = generator ^ r = 91244601631199390087457119346508779315286803903131391420127244904792122938940709660362962649667075186821983944988678022365938795166215
    /// Written as  two_adic_root_of_unity * r (in the Montgomery representation)
    ///           = 55449490835943795775274710676652807669921050617191303049621177739112291868503712487520590990161122312149433152053693440881458912825757
    #[rustfmt::skip]
    const TWO_ADIC_ROOT_OF_UNITY: BigInteger = BigInteger([
        9937068781054595485u64,
        7915757163762136552u64,
        6031862205807667740u64,
        10013230067566426236u64,
        16377966435823521975u64,
        16963504120088388061u64,
        1407275826503924513u64,
    ]);
}
impl FpParameters for FrParameters {
    /// MODULUS = 102211695604069718983520304652693874995639508460729604902280098199782626401528481486963081749137698194804284966854672709980015705456737
    #[rustfmt::skip]
    const MODULUS: BigInteger = BigInteger([
        20203526160481u64,
        23855004276315648u64,
        9727775195301937152u64,
        101468602368u64,
        14843406975516u64,
        10133099161767936u64,
        2594073385365405696u64,
    ]);

    const MODULUS_BITS: u32 = 446;

    const CAPACITY: u32 = Self::MODULUS_BITS - 1;

    const REPR_SHAVE_BITS: u32 = 2;

    /// R = pow(2, 448) % MODULUS
    ///   = 11356855067118857664681675319147409384164801462210825965529511782160903302698552917449478469799678197132526838283468963674491690417497
    #[rustfmt::skip]
    const R: BigInteger = BigInteger([
        18446602649026428249u64,
        18279759043775342079u64,
        5692549927724646399u64,
        18446743363429335036u64,
        18446640169860723003u64,
        18375812379577176063u64,
        288230376151711743u64,
    ]);

    /// R2 = R * R % MODULUS
    ///    = 10094365493747939110994246152858630576726914041719645800877649847726923892072356477969710028184624369762515824728529746264443874044040
    #[rustfmt::skip]
    const R2: BigInteger = BigInteger([
        10117484508308695176u64,
        10389324772409430319u64,
        3010410493505670749u64,
        6139499338853313711u64,
        13958564486053044277u64,
        5509403521706670306u64,
        256189125077383352u64,
    ]);

    /// INV = (-MODULUS) ^ {-1} % pow(2, 64) = 595423277050246629
    const INV: u64 = 2436954288853703775u64;

    /// GENERATOR = 7   (smallest generator)
    /// Written as 7 * R (in the Montgomery representation)
    ///          = 79497985469832003652771727234031865689153610235475781758706582475126323118889870422146349288597747379927687867984282745721441832922479
    #[rustfmt::skip]
    const GENERATOR: BigInteger = BigInteger([
        18445754100927688047u64,
        17277848864170084863u64,
        2954361346653421567u64,
        18446739101748035558u64,
        18446016746767751331u64,
        17950222214782922751u64,
        2017612633061982207u64,
    ]);

    /// (MODULUS - 1) / 2 =
    /// 51105847802034859491760152326346937497819754230364802451140049099891313200764240743481540874568849097402142483427336354990007852728368
    #[rustfmt::skip]
    const MODULUS_MINUS_ONE_DIV_TWO: BigInteger = BigInteger([
        10101763080240u64,
        11927502138157824u64,
        4863887597650968576u64,
        50734301184u64,
        7421703487758u64,
        5066549580883968u64,
        1297036692682702848u64,
    ]);

    // T and T_MINUS_ONE_DIV_TWO, where MODULUS - 1 = 2^s * t
    // Here, s = 5

    /// T = (MODULUS - 1) / 2^s =
    /// 3194115487627178718235009520396683593613734639397800153196253068743207075047765046467596304660553068587633905214208522186875490795523
    #[rustfmt::skip]
    const T: BigInteger = BigInteger([
        631360192515u64,
        745468883634864u64,
        303992974853185536u64,
        16140901067666751488u64,
        463856467984u64,
        316659348805248u64,
        81064793292668928u64,
    ]);

    /// (T - 1) / 2 =
    /// 1597057743813589359117504760198341796806867319698900076598126534371603537523882523233798152330276534293816952607104261093437745397761
    #[rustfmt::skip]
    const T_MINUS_ONE_DIV_TWO: BigInteger = BigInteger([
        315680096257u64,
        372734441817432u64,
        151996487426592768u64,
        8070450533833375744u64,
        231928233992u64,
        158329674402624u64,
        40532396646334464u64,
    ]);
}
