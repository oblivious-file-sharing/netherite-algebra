use super::*;
use ark_ff::{field_new, fields::*};

pub type Fq6 = Fp6<Fq6Parameters>;

#[derive(Clone, Copy)]
pub struct Fq6Parameters;

// The extension is done using the irreducible polynomial v ^ 3 - u - 2 over Fq2

impl Fp6Parameters for Fq6Parameters {
    type Fp2Params = Fq2Parameters;

    /// NONRESIDUE = U + 2
    #[rustfmt::skip]
    const NONRESIDUE: Fq2 = field_new!(Fq2, FQ_TWO, FQ_ONE);

    #[rustfmt::skip]
    const FROBENIUS_COEFF_FP6_C1: &'static [Fq2] = &[
        // Fp2::NONRESIDUE^(((q^0) - 1) / 3)
        field_new!(Fq2, FQ_ONE, FQ_ZERO),
        // Fp2::NONRESIDUE^(((q^1) - 1) / 3)
        field_new!(Fq2,
            field_new!(Fq, "29958365884390505595810984941340734449227790005811238189914472478418123143937693791021522922389308701048955965019138683526204664606731"),
            field_new!(Fq, "89269107654347733945828879633805706030959265598026923170063258386115503693153659076847549113334040039608678031457533751427878557104776"),
        ),
        // Fp2::NONRESIDUE^(((q^2) - 1) / 3)
        field_new!(Fq2,
            FQ_ONE,
            FQ_ZERO,
        ),
        // Fp2::NONRESIDUE^(((q^3) - 1) / 3)
        field_new!(Fq2,
            field_new!(Fq, "29958365884390505595810984941340734449227790005811238189914472478418123143937693791021522922389308701048955965019138683526204664606731"),
            field_new!(Fq, "89269107654347733945828879633805706030959265598026923170063258386115503693153659076847549113334040039608678031457533751427878557104776"),
        ),
        // Fp2::NONRESIDUE^(((q^4) - 1) / 3)
        field_new!(Fq2,
            FQ_ONE,
            FQ_ZERO,
        ),
        // Fp2::NONRESIDUE^(((q^5) - 1) / 3)
        field_new!(Fq2,
            field_new!(Fq, "29958365884390505595810984941340734449227790005811238189914472478418123143937693791021522922389308701048955965019138683526204664606731"),
            field_new!(Fq, "89269107654347733945828879633805706030959265598026923170063258386115503693153659076847549113334040039608678031457533751427878557104776"),
        ),
    ];
    #[rustfmt::skip]
    const FROBENIUS_COEFF_FP6_C2: &'static [Fq2] = &[
        // Fp2::NONRESIDUE^((2*(q^0) - 2) / 3)
        field_new!(Fq2, FQ_ONE, FQ_ZERO),
        // Fp2::NONRESIDUE^((2*(q^1) - 2) / 3)
        field_new!(Fq2,
            field_new!(Fq, "89656107252853722777751913771531300838664573370086651241090214257868301865979817180775390593089893330837611525350043643753258627713066"),
            field_new!(Fq, "4241199183134730342670127988799088818553815405118539467854545545430388374180579902583118554273009096478588621398504479339359805270520"),
        ),
        // Fp2::NONRESIDUE^((2*(q^2) - 2) / 3)
        field_new!(Fq2,
            FQ_ONE,
            FQ_ZERO,
        ),
        // Fp2::NONRESIDUE^((2*(q^3) - 2) / 3)
        field_new!(Fq2,
            field_new!(Fq, "89656107252853722777751913771531300838664573370086651241090214257868301865979817180775390593089893330837611525350043643753258627713066"),
            field_new!(Fq, "4241199183134730342670127988799088818553815405118539467854545545430388374180579902583118554273009096478588621398504479339359805270520")),
        // Fp2::NONRESIDUE^((2*(q^4) - 2) / 3)
        field_new!(Fq2,
            FQ_ONE,
            FQ_ZERO,
        ),
        // Fp2::NONRESIDUE^((2*(q^5) - 2) / 3)
        field_new!(Fq2,
            field_new!(Fq, "89656107252853722777751913771531300838664573370086651241090214257868301865979817180775390593089893330837611525350043643753258627713066"),
            field_new!(Fq, "4241199183134730342670127988799088818553815405118539467854545545430388374180579902583118554273009096478588621398504479339359805270520")
        ),
    ];

    #[inline(always)]
    fn mul_fp2_by_nonresidue(fe: &Fq2) -> Fq2 {
        //   (c0 + u * c1) * (u + 2)
        // = c0 * u - c1 + c0 * 2 + 2 * u * c1
        // = (c0 + 2 * c1) * u + (2 * c0 - c1)

        let c0 = fe.c0.double() - fe.c1;
        let c1 = fe.c0 + fe.c1.double();
        field_new!(Fq2, c0, c1)
    }
}
